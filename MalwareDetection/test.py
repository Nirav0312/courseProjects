import numpy as np
import scipy.sparse
import pickle
import math


# if __name__ == "__main__":
#
#     a = np.array([1,2,3,4,5])
#     b = np.array([2,3,6])
#
#
#     xy, x_ind, y_ind = np.intersect1d(a,b,return_indices=True)
#
#     no_of_elements = len(a)
#
#     feature_vector = np.array([0] *no_of_elements)
#
#     print(xy[:])
#
#     print(feature_vector.shape)
#     print(x_ind)
#     print(y_ind)
#
#     feature_vector[xy] = 1
#     print(feature_vector)
#     # x_hat[xy] = 1


# with open("E://data//Nirav//M.tech//cs698//data//Static_Analysis_RAWDATA//feature_set_dict_malware", 'rb') as file:
#     dict = pickle.load(file)
#
#
# with open("E://data//Nirav//M.tech//cs698//data//Static_Analysis_RAWDATA//feature_set_malware", 'rb') as file:
#     list_opcode = pickle.load(file)
#
#
# print(len(list(dict.keys())))
# print(len(list_opcode))

# for key in list(dict.keys()):
#     if(dict[key]>4000):
#         print(key)


with open("E://data//Nirav//M.tech//cs698//data//Static_Analysis_RAWDATA//infogain", 'rb') as file:
    infogain = pickle.load(file)



ngrams = list()

for i in range(1,1000):
    ngrams.append(infogain[i*-1][0])
    # print(infogain[i*-1])
#
# for i in range(0,9):
#     print(ngrams[i])


with open("E://data//Nirav//M.tech//cs698//data//Static_Analysis_RAWDATA//top_ngrams", 'wb') as file:
    pickle.dump(ngrams,file)